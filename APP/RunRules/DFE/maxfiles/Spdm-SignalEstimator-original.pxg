<?xml version="1.0" encoding="UTF-8" ?>
<Graph version="2014.2" pxg_version="1" maxfile_name="Spdm" design_name="SignalEstimator" compilation_phase="original" has_longest_path="false">
	<Node group="[]" id="0" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:32)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="2" dst_node_input="enable" src_node_id="0" src_node_output="value" />
	<Node group="[]" id="1" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>49.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:32)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>49.0</Value>
	</Node>
	<Edge dst_node_id="2" dst_node_input="max" src_node_id="1" src_node_output="value" />
	<Node group="[]" id="2" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:32)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="4" dst_node_input="a" src_node_id="2" src_node_output="count" />
	<Edge dst_node_id="502" dst_node_input="sel" src_node_id="2" src_node_output="count" />
	<Edge dst_node_id="504" dst_node_input="sel" src_node_id="2" src_node_output="count" />
	<Edge dst_node_id="520" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="521" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="522" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="524" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="526" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="527" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="528" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="529" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="531" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="533" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="538" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="541" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="544" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="547" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="552" dst_node_input="clearAccumulate" src_node_id="2" src_node_output="wrap" />
	<Edge dst_node_id="648" dst_node_input="a" src_node_id="2" src_node_output="wrap" />
	<Node group="[]" id="375" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="377" dst_node_input="enable" src_node_id="375" src_node_output="value" />
	<Node group="[]" id="376" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>49.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>49.0</Value>
	</Node>
	<Edge dst_node_id="377" dst_node_input="max" src_node_id="376" src_node_output="value" />
	<Node group="[]" id="377" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="378" dst_node_input="sel" src_node_id="377" src_node_output="count" />
	<Edge dst_node_id="452" dst_node_input="a" src_node_id="377" src_node_output="count" />
	<Node group="[]" id="451" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="452" dst_node_input="b" src_node_id="451" src_node_output="value" />
	<Node group="[]" id="452" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="453" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="454" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="455" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="456" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="457" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="458" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="459" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="460" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="461" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="462" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="463" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="464" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="465" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="466" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="467" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="468" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="469" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="470" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="471" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="472" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="473" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="474" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="475" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="476" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="477" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="478" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="479" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="480" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="481" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="482" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="483" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="484" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="485" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="486" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="487" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="488" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="489" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="490" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="491" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="492" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="493" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="494" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="495" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="496" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="497" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="498" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="499" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="500" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Edge dst_node_id="501" dst_node_input="load" src_node_id="452" src_node_output="result" />
	<Node group="[]" id="380" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="382" dst_node_input="enable" src_node_id="380" src_node_output="value" />
	<Node group="[]" id="381" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge dst_node_id="382" dst_node_input="max" src_node_id="381" src_node_output="value" />
	<Node group="[]" id="382" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="384" dst_node_input="a" src_node_id="382" src_node_output="count" />
	<Edge dst_node_id="386" dst_node_input="a" src_node_id="382" src_node_output="count" />
	<Edge dst_node_id="389" dst_node_input="a" src_node_id="382" src_node_output="count" />
	<Edge dst_node_id="391" dst_node_input="a" src_node_id="382" src_node_output="count" />
	<Node group="[]" id="388" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="389" dst_node_input="b" src_node_id="388" src_node_output="value" />
	<Node group="[]" id="389" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="392" dst_node_input="a" src_node_id="389" src_node_output="result" />
	<Node group="[]" id="390" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge dst_node_id="391" dst_node_input="b" src_node_id="390" src_node_output="value" />
	<Node group="[]" id="391" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="392" dst_node_input="b" src_node_id="391" src_node_output="result" />
	<Node group="[]" id="392" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="397" dst_node_input="b" src_node_id="392" src_node_output="result" />
	<Edge dst_node_id="401" dst_node_input="sel" src_node_id="392" src_node_output="result" />
	<Node group="[]" id="248" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="250" dst_node_input="enable" src_node_id="248" src_node_output="value" />
	<Node group="[]" id="249" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>49.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>49.0</Value>
	</Node>
	<Edge dst_node_id="250" dst_node_input="max" src_node_id="249" src_node_output="value" />
	<Node group="[]" id="250" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="251" dst_node_input="sel" src_node_id="250" src_node_output="count" />
	<Edge dst_node_id="325" dst_node_input="a" src_node_id="250" src_node_output="count" />
	<Node group="[]" id="324" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="325" dst_node_input="b" src_node_id="324" src_node_output="value" />
	<Node group="[]" id="325" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="326" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="327" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="328" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="329" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="330" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="331" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="332" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="333" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="334" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="335" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="336" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="337" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="338" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="339" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="340" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="341" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="342" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="343" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="344" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="345" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="346" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="347" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="348" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="349" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="350" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="351" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="352" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="353" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="354" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="355" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="356" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="357" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="358" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="359" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="360" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="361" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="362" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="363" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="364" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="365" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="366" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="367" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="368" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="369" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="370" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="371" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="372" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="373" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Edge dst_node_id="374" dst_node_input="load" src_node_id="325" src_node_output="result" />
	<Node group="[]" id="253" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="255" dst_node_input="enable" src_node_id="253" src_node_output="value" />
	<Node group="[]" id="254" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge dst_node_id="255" dst_node_input="max" src_node_id="254" src_node_output="value" />
	<Node group="[]" id="255" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="257" dst_node_input="a" src_node_id="255" src_node_output="count" />
	<Edge dst_node_id="259" dst_node_input="a" src_node_id="255" src_node_output="count" />
	<Edge dst_node_id="262" dst_node_input="a" src_node_id="255" src_node_output="count" />
	<Edge dst_node_id="264" dst_node_input="a" src_node_id="255" src_node_output="count" />
	<Node group="[]" id="261" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="262" dst_node_input="b" src_node_id="261" src_node_output="value" />
	<Node group="[]" id="262" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="265" dst_node_input="a" src_node_id="262" src_node_output="result" />
	<Node group="[]" id="263" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge dst_node_id="264" dst_node_input="b" src_node_id="263" src_node_output="value" />
	<Node group="[]" id="264" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="265" dst_node_input="b" src_node_id="264" src_node_output="result" />
	<Node group="[]" id="265" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="270" dst_node_input="b" src_node_id="265" src_node_output="result" />
	<Edge dst_node_id="274" dst_node_input="sel" src_node_id="265" src_node_output="result" />
	<Node group="[]" id="121" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="123" dst_node_input="enable" src_node_id="121" src_node_output="value" />
	<Node group="[]" id="122" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>49.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>49.0</Value>
	</Node>
	<Edge dst_node_id="123" dst_node_input="max" src_node_id="122" src_node_output="value" />
	<Node group="[]" id="123" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:36)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="124" dst_node_input="sel" src_node_id="123" src_node_output="count" />
	<Edge dst_node_id="198" dst_node_input="a" src_node_id="123" src_node_output="count" />
	<Node group="[]" id="197" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="198" dst_node_input="b" src_node_id="197" src_node_output="value" />
	<Node group="[]" id="198" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="199" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="200" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="201" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="202" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="203" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="204" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="205" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="206" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="207" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="208" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="209" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="210" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="211" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="212" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="213" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="214" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="215" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="216" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="217" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="218" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="219" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="220" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="221" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="222" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="223" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="224" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="225" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="226" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="227" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="228" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="229" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="230" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="231" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="232" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="233" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="234" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="235" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="236" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="237" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="238" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="239" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="240" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="241" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="242" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="243" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="244" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="245" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="246" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Edge dst_node_id="247" dst_node_input="load" src_node_id="198" src_node_output="result" />
	<Node group="[]" id="126" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="128" dst_node_input="enable" src_node_id="126" src_node_output="value" />
	<Node group="[]" id="127" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge dst_node_id="128" dst_node_input="max" src_node_id="127" src_node_output="value" />
	<Node group="[]" id="128" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:47)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="130" dst_node_input="a" src_node_id="128" src_node_output="count" />
	<Edge dst_node_id="132" dst_node_input="a" src_node_id="128" src_node_output="count" />
	<Edge dst_node_id="135" dst_node_input="a" src_node_id="128" src_node_output="count" />
	<Edge dst_node_id="137" dst_node_input="a" src_node_id="128" src_node_output="count" />
	<Node group="[]" id="134" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="135" dst_node_input="b" src_node_id="134" src_node_output="value" />
	<Node group="[]" id="135" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="138" dst_node_input="a" src_node_id="135" src_node_output="result" />
	<Node group="[]" id="136" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge dst_node_id="137" dst_node_input="b" src_node_id="136" src_node_output="value" />
	<Node group="[]" id="137" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="138" dst_node_input="b" src_node_id="137" src_node_output="result" />
	<Node group="[]" id="138" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:55)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="143" dst_node_input="b" src_node_id="138" src_node_output="result" />
	<Edge dst_node_id="147" dst_node_input="sel" src_node_id="138" src_node_output="result" />
	<Node group="[]" id="3" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:35)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="4" dst_node_input="b" src_node_id="3" src_node_output="value" />
	<Node group="[]" id="4" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:35)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="7" dst_node_input="a" src_node_id="4" src_node_output="result" />
	<Edge dst_node_id="109" dst_node_input="a" src_node_id="4" src_node_output="result" />
	<Node group="[]" id="5" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_roi_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_roi_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>io_roi_force_disabled</Name>
	</Node>
	<Edge dst_node_id="6" dst_node_input="a" src_node_id="5" src_node_output="io_roi_force_disabled" />
	<Node group="[]" id="6" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="7" dst_node_input="b" src_node_id="6" src_node_output="result" />
	<Node group="[]" id="7" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="8" dst_node_input="enable" src_node_id="7" src_node_output="result" />
	<Node group="[]" id="8" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeInput">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="5" name="data" type="dfeBits(784)" />
		<Text>Input(roi)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>roi</Name>
	</Node>
	<Edge dst_node_id="9" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="11" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="13" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="15" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="17" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="19" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="21" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="23" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="25" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="27" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="29" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="31" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="33" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="35" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="37" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="39" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="41" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="43" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="45" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="47" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="49" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="51" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="53" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="55" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="57" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="59" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="61" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="63" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="65" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="67" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="69" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="71" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="73" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="75" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="77" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="79" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="81" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="83" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="85" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="87" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="89" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="91" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="93" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="95" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="97" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="99" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="101" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="103" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Edge dst_node_id="105" dst_node_input="a" src_node_id="8" src_node_output="data" />
	<Node group="[]" id="15" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[63:48]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>48</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="16" dst_node_input="input" src_node_id="15" src_node_output="result" />
	<Node group="[]" id="16" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option3" src_node_id="16" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option0" src_node_id="16" src_node_output="output" />
	<Node group="[]" id="13" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[47:32]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>32</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="14" dst_node_input="input" src_node_id="13" src_node_output="result" />
	<Node group="[]" id="14" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option2" src_node_id="14" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option1" src_node_id="14" src_node_output="output" />
	<Node group="[]" id="11" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[31:16]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>16</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="12" dst_node_input="input" src_node_id="11" src_node_output="result" />
	<Node group="[]" id="12" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option1" src_node_id="12" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option2" src_node_id="12" src_node_output="output" />
	<Node group="[]" id="9" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[15:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>0</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="10" dst_node_input="input" src_node_id="9" src_node_output="result" />
	<Node group="[]" id="10" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option0" src_node_id="10" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option3" src_node_id="10" src_node_output="output" />
	<Node group="[]" id="17" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[79:64]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>64</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="18" dst_node_input="input" src_node_id="17" src_node_output="result" />
	<Node group="[]" id="18" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option4" src_node_id="18" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option4" src_node_id="18" src_node_output="output" />
	<Node group="[]" id="19" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[95:80]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>80</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="20" dst_node_input="input" src_node_id="19" src_node_output="result" />
	<Node group="[]" id="20" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option5" src_node_id="20" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option5" src_node_id="20" src_node_output="output" />
	<Node group="[]" id="21" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[111:96]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>96</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="22" dst_node_input="input" src_node_id="21" src_node_output="result" />
	<Node group="[]" id="22" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option6" src_node_id="22" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option6" src_node_id="22" src_node_output="output" />
	<Node group="[]" id="29" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[175:160]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>160</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="30" dst_node_input="input" src_node_id="29" src_node_output="result" />
	<Node group="[]" id="30" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option10" src_node_id="30" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option7" src_node_id="30" src_node_output="output" />
	<Node group="[]" id="27" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[159:144]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>144</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="28" dst_node_input="input" src_node_id="27" src_node_output="result" />
	<Node group="[]" id="28" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option9" src_node_id="28" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option8" src_node_id="28" src_node_output="output" />
	<Node group="[]" id="25" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[143:128]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>128</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="26" dst_node_input="input" src_node_id="25" src_node_output="result" />
	<Node group="[]" id="26" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option8" src_node_id="26" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option9" src_node_id="26" src_node_output="output" />
	<Node group="[]" id="23" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[127:112]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>112</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="24" dst_node_input="input" src_node_id="23" src_node_output="result" />
	<Node group="[]" id="24" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option7" src_node_id="24" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option10" src_node_id="24" src_node_output="output" />
	<Node group="[]" id="31" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[191:176]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>176</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="32" dst_node_input="input" src_node_id="31" src_node_output="result" />
	<Node group="[]" id="32" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option11" src_node_id="32" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option11" src_node_id="32" src_node_output="output" />
	<Node group="[]" id="33" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[207:192]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>192</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="34" dst_node_input="input" src_node_id="33" src_node_output="result" />
	<Node group="[]" id="34" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option12" src_node_id="34" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option12" src_node_id="34" src_node_output="output" />
	<Node group="[]" id="35" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[223:208]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>208</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="36" dst_node_input="input" src_node_id="35" src_node_output="result" />
	<Node group="[]" id="36" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option13" src_node_id="36" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option13" src_node_id="36" src_node_output="output" />
	<Node group="[]" id="43" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[287:272]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>272</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="44" dst_node_input="input" src_node_id="43" src_node_output="result" />
	<Node group="[]" id="44" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option17" src_node_id="44" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option14" src_node_id="44" src_node_output="output" />
	<Node group="[]" id="41" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[271:256]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>256</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="42" dst_node_input="input" src_node_id="41" src_node_output="result" />
	<Node group="[]" id="42" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option16" src_node_id="42" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option15" src_node_id="42" src_node_output="output" />
	<Node group="[]" id="39" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[255:240]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>240</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="40" dst_node_input="input" src_node_id="39" src_node_output="result" />
	<Node group="[]" id="40" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option15" src_node_id="40" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option16" src_node_id="40" src_node_output="output" />
	<Node group="[]" id="37" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[239:224]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>224</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="38" dst_node_input="input" src_node_id="37" src_node_output="result" />
	<Node group="[]" id="38" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option14" src_node_id="38" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option17" src_node_id="38" src_node_output="output" />
	<Node group="[]" id="45" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[303:288]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>288</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="46" dst_node_input="input" src_node_id="45" src_node_output="result" />
	<Node group="[]" id="46" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option18" src_node_id="46" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option18" src_node_id="46" src_node_output="output" />
	<Node group="[]" id="47" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[319:304]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>304</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="48" dst_node_input="input" src_node_id="47" src_node_output="result" />
	<Node group="[]" id="48" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option19" src_node_id="48" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option19" src_node_id="48" src_node_output="output" />
	<Node group="[]" id="49" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[335:320]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>320</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="50" dst_node_input="input" src_node_id="49" src_node_output="result" />
	<Node group="[]" id="50" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option20" src_node_id="50" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option20" src_node_id="50" src_node_output="output" />
	<Node group="[]" id="57" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[399:384]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>384</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="58" dst_node_input="input" src_node_id="57" src_node_output="result" />
	<Node group="[]" id="58" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option24" src_node_id="58" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option21" src_node_id="58" src_node_output="output" />
	<Node group="[]" id="55" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[383:368]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>368</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="56" dst_node_input="input" src_node_id="55" src_node_output="result" />
	<Node group="[]" id="56" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option23" src_node_id="56" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option22" src_node_id="56" src_node_output="output" />
	<Node group="[]" id="53" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[367:352]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>352</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="54" dst_node_input="input" src_node_id="53" src_node_output="result" />
	<Node group="[]" id="54" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option22" src_node_id="54" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option23" src_node_id="54" src_node_output="output" />
	<Node group="[]" id="51" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[351:336]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>336</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="52" dst_node_input="input" src_node_id="51" src_node_output="result" />
	<Node group="[]" id="52" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option21" src_node_id="52" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option24" src_node_id="52" src_node_output="output" />
	<Node group="[]" id="59" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[415:400]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>400</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="60" dst_node_input="input" src_node_id="59" src_node_output="result" />
	<Node group="[]" id="60" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option25" src_node_id="60" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option25" src_node_id="60" src_node_output="output" />
	<Node group="[]" id="61" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[431:416]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>416</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="62" dst_node_input="input" src_node_id="61" src_node_output="result" />
	<Node group="[]" id="62" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option26" src_node_id="62" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option26" src_node_id="62" src_node_output="output" />
	<Node group="[]" id="63" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[447:432]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>432</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="64" dst_node_input="input" src_node_id="63" src_node_output="result" />
	<Node group="[]" id="64" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option27" src_node_id="64" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option27" src_node_id="64" src_node_output="output" />
	<Node group="[]" id="71" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[511:496]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>496</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="72" dst_node_input="input" src_node_id="71" src_node_output="result" />
	<Node group="[]" id="72" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option31" src_node_id="72" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option28" src_node_id="72" src_node_output="output" />
	<Node group="[]" id="69" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[495:480]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>480</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="70" dst_node_input="input" src_node_id="69" src_node_output="result" />
	<Node group="[]" id="70" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option30" src_node_id="70" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option29" src_node_id="70" src_node_output="output" />
	<Node group="[]" id="67" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[479:464]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>464</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="68" dst_node_input="input" src_node_id="67" src_node_output="result" />
	<Node group="[]" id="68" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option29" src_node_id="68" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option30" src_node_id="68" src_node_output="output" />
	<Node group="[]" id="65" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[463:448]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>448</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="66" dst_node_input="input" src_node_id="65" src_node_output="result" />
	<Node group="[]" id="66" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option28" src_node_id="66" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option31" src_node_id="66" src_node_output="output" />
	<Node group="[]" id="73" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[527:512]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>512</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="74" dst_node_input="input" src_node_id="73" src_node_output="result" />
	<Node group="[]" id="74" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option32" src_node_id="74" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option32" src_node_id="74" src_node_output="output" />
	<Node group="[]" id="75" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[543:528]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>528</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="76" dst_node_input="input" src_node_id="75" src_node_output="result" />
	<Node group="[]" id="76" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option33" src_node_id="76" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option33" src_node_id="76" src_node_output="output" />
	<Node group="[]" id="77" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[559:544]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>544</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="78" dst_node_input="input" src_node_id="77" src_node_output="result" />
	<Node group="[]" id="78" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option34" src_node_id="78" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option34" src_node_id="78" src_node_output="output" />
	<Node group="[]" id="85" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[623:608]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>608</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="86" dst_node_input="input" src_node_id="85" src_node_output="result" />
	<Node group="[]" id="86" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option38" src_node_id="86" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option35" src_node_id="86" src_node_output="output" />
	<Node group="[]" id="83" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[607:592]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>592</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="84" dst_node_input="input" src_node_id="83" src_node_output="result" />
	<Node group="[]" id="84" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option37" src_node_id="84" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option36" src_node_id="84" src_node_output="output" />
	<Node group="[]" id="81" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[591:576]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>576</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="82" dst_node_input="input" src_node_id="81" src_node_output="result" />
	<Node group="[]" id="82" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option36" src_node_id="82" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option37" src_node_id="82" src_node_output="output" />
	<Node group="[]" id="79" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[575:560]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>560</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="80" dst_node_input="input" src_node_id="79" src_node_output="result" />
	<Node group="[]" id="80" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option35" src_node_id="80" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option38" src_node_id="80" src_node_output="output" />
	<Node group="[]" id="87" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[639:624]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>624</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="88" dst_node_input="input" src_node_id="87" src_node_output="result" />
	<Node group="[]" id="88" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option39" src_node_id="88" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option39" src_node_id="88" src_node_output="output" />
	<Node group="[]" id="89" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[655:640]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>640</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="90" dst_node_input="input" src_node_id="89" src_node_output="result" />
	<Node group="[]" id="90" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option40" src_node_id="90" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option40" src_node_id="90" src_node_output="output" />
	<Node group="[]" id="91" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[671:656]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>656</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="92" dst_node_input="input" src_node_id="91" src_node_output="result" />
	<Node group="[]" id="92" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option41" src_node_id="92" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option41" src_node_id="92" src_node_output="output" />
	<Node group="[]" id="99" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[735:720]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>720</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="100" dst_node_input="input" src_node_id="99" src_node_output="result" />
	<Node group="[]" id="100" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option45" src_node_id="100" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option42" src_node_id="100" src_node_output="output" />
	<Node group="[]" id="97" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[719:704]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>704</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="98" dst_node_input="input" src_node_id="97" src_node_output="result" />
	<Node group="[]" id="98" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option44" src_node_id="98" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option43" src_node_id="98" src_node_output="output" />
	<Node group="[]" id="95" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[703:688]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>688</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="96" dst_node_input="input" src_node_id="95" src_node_output="result" />
	<Node group="[]" id="96" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option43" src_node_id="96" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option44" src_node_id="96" src_node_output="output" />
	<Node group="[]" id="93" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[687:672]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>672</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="94" dst_node_input="input" src_node_id="93" src_node_output="result" />
	<Node group="[]" id="94" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option42" src_node_id="94" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option45" src_node_id="94" src_node_output="output" />
	<Node group="[]" id="101" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[751:736]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>736</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="102" dst_node_input="input" src_node_id="101" src_node_output="result" />
	<Node group="[]" id="102" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option46" src_node_id="102" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option46" src_node_id="102" src_node_output="output" />
	<Node group="[]" id="103" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[767:752]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>752</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="104" dst_node_input="input" src_node_id="103" src_node_output="result" />
	<Node group="[]" id="104" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option47" src_node_id="104" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option47" src_node_id="104" src_node_output="output" />
	<Node group="[]" id="105" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(784)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[783:768]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>768</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="106" dst_node_input="input" src_node_id="105" src_node_output="result" />
	<Node group="[]" id="106" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:39)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="504" dst_node_input="option48" src_node_id="106" src_node_output="output" />
	<Edge dst_node_id="124" dst_node_input="option48" src_node_id="106" src_node_output="output" />
	<Node group="[]" id="124" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option2" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option3" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option4" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option5" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option6" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option7" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option8" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option9" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option10" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option11" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option12" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option13" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option14" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option15" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option16" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option17" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option18" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option19" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option20" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option21" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option22" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option23" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option24" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option25" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option26" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option27" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option28" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option29" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option30" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option31" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option32" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option33" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option34" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option35" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option36" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option37" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option38" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option39" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option40" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option41" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option42" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option43" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option44" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option45" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option46" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option47" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option48" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:128)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:43)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="125" dst_node_input="i" src_node_id="124" src_node_output="result" />
	<Node group="[]" id="125" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:16, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:43)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="133" dst_node_input="input" src_node_id="125" src_node_output="o" />
	<Edge dst_node_id="140" dst_node_input="input" src_node_id="125" src_node_output="o" />
	<Edge dst_node_id="142" dst_node_input="a" src_node_id="125" src_node_output="o" />
	<Edge dst_node_id="146" dst_node_input="option0" src_node_id="125" src_node_output="o" />
	<Edge dst_node_id="147" dst_node_input="option0" src_node_id="125" src_node_output="o" />
	<Node group="[]" id="129" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:50)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="130" dst_node_input="b" src_node_id="129" src_node_output="value" />
	<Node group="[]" id="130" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:50)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="133" dst_node_input="load" src_node_id="130" src_node_output="result" />
	<Edge dst_node_id="139" dst_node_input="a" src_node_id="130" src_node_output="result" />
	<Node group="[]" id="131" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:52)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge dst_node_id="132" dst_node_input="b" src_node_id="131" src_node_output="value" />
	<Node group="[]" id="132" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:52)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="139" dst_node_input="b" src_node_id="132" src_node_output="result" />
	<Node group="[]" id="139" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="141" dst_node_input="sel" src_node_id="139" src_node_output="result" />
	<Edge dst_node_id="144" dst_node_input="reset" src_node_id="139" src_node_output="result" />
	<Node group="[]" id="140" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="-1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: -1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:125)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="141" dst_node_input="option0" src_node_id="140" src_node_output="output" />
	<Node group="[]" id="133" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:54)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="141" dst_node_input="option1" src_node_id="133" src_node_output="output" />
	<Node group="[]" id="141" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:125)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="142" dst_node_input="b" src_node_id="141" src_node_output="result" />
	<Node group="[]" id="142" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:126)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="143" dst_node_input="a" src_node_id="142" src_node_output="result" />
	<Node group="[]" id="143" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:127)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="144" dst_node_input="input" src_node_id="143" src_node_output="result" />
	<Node group="[]" id="144" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMinMaxStream">
		<Input name="reset" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Stream Max</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamMax(Reductions.java:262)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:127)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Type>max</Type>
		<IsTwosComplement>false</IsTwosComplement>
	</Node>
	<Edge dst_node_id="146" dst_node_input="sel" src_node_id="144" src_node_output="result" />
	<Node group="[]" id="145" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:129)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="146" dst_node_input="option1" src_node_id="145" src_node_output="value" />
	<Node group="[]" id="146" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:129)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="147" dst_node_input="option1" src_node_id="146" src_node_output="result" />
	<Node group="[]" id="147" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:130)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="148" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="149" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="150" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="151" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="152" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="153" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="154" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="155" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="156" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="157" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="158" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="159" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="160" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="161" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="162" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="163" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="164" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="165" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="166" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="167" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="168" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="169" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="170" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="171" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="172" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="173" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="174" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="175" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="176" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="177" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="178" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="179" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="180" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="181" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="182" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="183" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="184" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="185" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="186" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="187" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="188" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="189" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="190" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="191" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="192" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="193" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="194" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="195" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Edge dst_node_id="196" dst_node_input="input" src_node_id="147" src_node_output="result" />
	<Node group="[]" id="169" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="24" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 24</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="220" dst_node_input="input" src_node_id="169" src_node_output="output" />
	<Node group="[]" id="220" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option0" src_node_id="220" src_node_output="output" />
	<Node group="[]" id="162" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="17" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 17</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="213" dst_node_input="input" src_node_id="162" src_node_output="output" />
	<Node group="[]" id="213" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option1" src_node_id="213" src_node_output="output" />
	<Node group="[]" id="155" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="10" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 10</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="206" dst_node_input="input" src_node_id="155" src_node_output="output" />
	<Node group="[]" id="206" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option2" src_node_id="206" src_node_output="output" />
	<Node group="[]" id="148" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="3" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 3</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="199" dst_node_input="input" src_node_id="148" src_node_output="output" />
	<Node group="[]" id="199" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option3" src_node_id="199" src_node_output="output" />
	<Node group="[]" id="176" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="31" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 31</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="227" dst_node_input="input" src_node_id="176" src_node_output="output" />
	<Node group="[]" id="227" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option4" src_node_id="227" src_node_output="output" />
	<Node group="[]" id="183" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="38" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 38</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="234" dst_node_input="input" src_node_id="183" src_node_output="output" />
	<Node group="[]" id="234" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option5" src_node_id="234" src_node_output="output" />
	<Node group="[]" id="190" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="45" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 45</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="241" dst_node_input="input" src_node_id="190" src_node_output="output" />
	<Node group="[]" id="241" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option6" src_node_id="241" src_node_output="output" />
	<Node group="[]" id="170" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="23" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 23</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="221" dst_node_input="input" src_node_id="170" src_node_output="output" />
	<Node group="[]" id="221" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option7" src_node_id="221" src_node_output="output" />
	<Node group="[]" id="163" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="16" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 16</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="214" dst_node_input="input" src_node_id="163" src_node_output="output" />
	<Node group="[]" id="214" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option8" src_node_id="214" src_node_output="output" />
	<Node group="[]" id="156" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="9" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 9</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="207" dst_node_input="input" src_node_id="156" src_node_output="output" />
	<Node group="[]" id="207" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option9" src_node_id="207" src_node_output="output" />
	<Node group="[]" id="149" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="2" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 2</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="200" dst_node_input="input" src_node_id="149" src_node_output="output" />
	<Node group="[]" id="200" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option10" src_node_id="200" src_node_output="output" />
	<Node group="[]" id="177" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="30" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 30</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="228" dst_node_input="input" src_node_id="177" src_node_output="output" />
	<Node group="[]" id="228" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option11" src_node_id="228" src_node_output="output" />
	<Node group="[]" id="184" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="37" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 37</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="235" dst_node_input="input" src_node_id="184" src_node_output="output" />
	<Node group="[]" id="235" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option12" src_node_id="235" src_node_output="output" />
	<Node group="[]" id="191" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="44" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 44</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="242" dst_node_input="input" src_node_id="191" src_node_output="output" />
	<Node group="[]" id="242" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option13" src_node_id="242" src_node_output="output" />
	<Node group="[]" id="171" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="22" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 22</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="222" dst_node_input="input" src_node_id="171" src_node_output="output" />
	<Node group="[]" id="222" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option14" src_node_id="222" src_node_output="output" />
	<Node group="[]" id="164" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="15" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 15</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="215" dst_node_input="input" src_node_id="164" src_node_output="output" />
	<Node group="[]" id="215" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option15" src_node_id="215" src_node_output="output" />
	<Node group="[]" id="157" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="8" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 8</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="208" dst_node_input="input" src_node_id="157" src_node_output="output" />
	<Node group="[]" id="208" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option16" src_node_id="208" src_node_output="output" />
	<Node group="[]" id="150" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="201" dst_node_input="input" src_node_id="150" src_node_output="output" />
	<Node group="[]" id="201" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option17" src_node_id="201" src_node_output="output" />
	<Node group="[]" id="178" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="29" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 29</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="229" dst_node_input="input" src_node_id="178" src_node_output="output" />
	<Node group="[]" id="229" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option18" src_node_id="229" src_node_output="output" />
	<Node group="[]" id="185" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="36" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 36</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="236" dst_node_input="input" src_node_id="185" src_node_output="output" />
	<Node group="[]" id="236" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option19" src_node_id="236" src_node_output="output" />
	<Node group="[]" id="192" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="43" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 43</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="243" dst_node_input="input" src_node_id="192" src_node_output="output" />
	<Node group="[]" id="243" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option20" src_node_id="243" src_node_output="output" />
	<Node group="[]" id="172" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="21" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 21</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="223" dst_node_input="input" src_node_id="172" src_node_output="output" />
	<Node group="[]" id="223" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option21" src_node_id="223" src_node_output="output" />
	<Node group="[]" id="165" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="14" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="216" dst_node_input="input" src_node_id="165" src_node_output="output" />
	<Node group="[]" id="216" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option22" src_node_id="216" src_node_output="output" />
	<Node group="[]" id="158" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="7" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 7</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="209" dst_node_input="input" src_node_id="158" src_node_output="output" />
	<Node group="[]" id="209" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option23" src_node_id="209" src_node_output="output" />
	<Node group="[]" id="151" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="202" dst_node_input="input" src_node_id="151" src_node_output="output" />
	<Node group="[]" id="202" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option24" src_node_id="202" src_node_output="output" />
	<Node group="[]" id="179" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="28" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 28</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="230" dst_node_input="input" src_node_id="179" src_node_output="output" />
	<Node group="[]" id="230" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option25" src_node_id="230" src_node_output="output" />
	<Node group="[]" id="186" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="35" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 35</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="237" dst_node_input="input" src_node_id="186" src_node_output="output" />
	<Node group="[]" id="237" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option26" src_node_id="237" src_node_output="output" />
	<Node group="[]" id="193" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="42" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 42</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="244" dst_node_input="input" src_node_id="193" src_node_output="output" />
	<Node group="[]" id="244" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option27" src_node_id="244" src_node_output="output" />
	<Node group="[]" id="173" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="25" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 25</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="224" dst_node_input="input" src_node_id="173" src_node_output="output" />
	<Node group="[]" id="224" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option28" src_node_id="224" src_node_output="output" />
	<Node group="[]" id="166" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="18" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 18</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="217" dst_node_input="input" src_node_id="166" src_node_output="output" />
	<Node group="[]" id="217" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option29" src_node_id="217" src_node_output="output" />
	<Node group="[]" id="159" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="11" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 11</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="210" dst_node_input="input" src_node_id="159" src_node_output="output" />
	<Node group="[]" id="210" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option30" src_node_id="210" src_node_output="output" />
	<Node group="[]" id="152" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="4" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 4</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="203" dst_node_input="input" src_node_id="152" src_node_output="output" />
	<Node group="[]" id="203" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option31" src_node_id="203" src_node_output="output" />
	<Node group="[]" id="180" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="32" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 32</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="231" dst_node_input="input" src_node_id="180" src_node_output="output" />
	<Node group="[]" id="231" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option32" src_node_id="231" src_node_output="output" />
	<Node group="[]" id="187" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="39" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 39</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="238" dst_node_input="input" src_node_id="187" src_node_output="output" />
	<Node group="[]" id="238" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option33" src_node_id="238" src_node_output="output" />
	<Node group="[]" id="194" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="46" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 46</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="245" dst_node_input="input" src_node_id="194" src_node_output="output" />
	<Node group="[]" id="245" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option34" src_node_id="245" src_node_output="output" />
	<Node group="[]" id="174" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="26" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 26</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="225" dst_node_input="input" src_node_id="174" src_node_output="output" />
	<Node group="[]" id="225" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option35" src_node_id="225" src_node_output="output" />
	<Node group="[]" id="167" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="19" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 19</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="218" dst_node_input="input" src_node_id="167" src_node_output="output" />
	<Node group="[]" id="218" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option36" src_node_id="218" src_node_output="output" />
	<Node group="[]" id="160" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="12" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 12</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="211" dst_node_input="input" src_node_id="160" src_node_output="output" />
	<Node group="[]" id="211" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option37" src_node_id="211" src_node_output="output" />
	<Node group="[]" id="153" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 5</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="204" dst_node_input="input" src_node_id="153" src_node_output="output" />
	<Node group="[]" id="204" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option38" src_node_id="204" src_node_output="output" />
	<Node group="[]" id="181" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="33" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 33</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="232" dst_node_input="input" src_node_id="181" src_node_output="output" />
	<Node group="[]" id="232" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option39" src_node_id="232" src_node_output="output" />
	<Node group="[]" id="188" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="40" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 40</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="239" dst_node_input="input" src_node_id="188" src_node_output="output" />
	<Node group="[]" id="239" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option40" src_node_id="239" src_node_output="output" />
	<Node group="[]" id="195" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="47" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 47</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="246" dst_node_input="input" src_node_id="195" src_node_output="output" />
	<Node group="[]" id="246" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option41" src_node_id="246" src_node_output="output" />
	<Node group="[]" id="175" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="27" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 27</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="226" dst_node_input="input" src_node_id="175" src_node_output="output" />
	<Node group="[]" id="226" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option42" src_node_id="226" src_node_output="output" />
	<Node group="[]" id="168" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="20" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 20</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="219" dst_node_input="input" src_node_id="168" src_node_output="output" />
	<Node group="[]" id="219" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option43" src_node_id="219" src_node_output="output" />
	<Node group="[]" id="161" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="13" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 13</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="212" dst_node_input="input" src_node_id="161" src_node_output="output" />
	<Node group="[]" id="212" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option44" src_node_id="212" src_node_output="output" />
	<Node group="[]" id="154" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 6</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="205" dst_node_input="input" src_node_id="154" src_node_output="output" />
	<Node group="[]" id="205" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option45" src_node_id="205" src_node_output="output" />
	<Node group="[]" id="182" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="34" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 34</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="233" dst_node_input="input" src_node_id="182" src_node_output="output" />
	<Node group="[]" id="233" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option46" src_node_id="233" src_node_output="output" />
	<Node group="[]" id="189" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="41" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 41</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="240" dst_node_input="input" src_node_id="189" src_node_output="output" />
	<Node group="[]" id="240" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option47" src_node_id="240" src_node_output="output" />
	<Node group="[]" id="196" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="48" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 48</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="247" dst_node_input="input" src_node_id="196" src_node_output="output" />
	<Node group="[]" id="247" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:49)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="251" dst_node_input="option48" src_node_id="247" src_node_output="output" />
	<Node group="[]" id="251" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option2" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option3" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option4" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option5" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option6" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option7" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option8" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option9" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option10" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option11" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option12" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option13" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option14" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option15" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option16" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option17" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option18" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option19" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option20" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option21" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option22" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option23" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option24" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option25" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option26" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option27" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option28" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option29" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option30" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option31" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option32" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option33" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option34" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option35" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option36" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option37" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option38" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option39" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option40" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option41" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option42" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option43" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option44" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option45" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option46" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option47" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option48" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:128)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:43)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="252" dst_node_input="i" src_node_id="251" src_node_output="result" />
	<Node group="[]" id="252" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:16, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:43)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="260" dst_node_input="input" src_node_id="252" src_node_output="o" />
	<Edge dst_node_id="267" dst_node_input="input" src_node_id="252" src_node_output="o" />
	<Edge dst_node_id="269" dst_node_input="a" src_node_id="252" src_node_output="o" />
	<Edge dst_node_id="273" dst_node_input="option0" src_node_id="252" src_node_output="o" />
	<Edge dst_node_id="274" dst_node_input="option0" src_node_id="252" src_node_output="o" />
	<Node group="[]" id="256" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:50)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="257" dst_node_input="b" src_node_id="256" src_node_output="value" />
	<Node group="[]" id="257" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:50)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="260" dst_node_input="load" src_node_id="257" src_node_output="result" />
	<Edge dst_node_id="266" dst_node_input="a" src_node_id="257" src_node_output="result" />
	<Node group="[]" id="258" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:52)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge dst_node_id="259" dst_node_input="b" src_node_id="258" src_node_output="value" />
	<Node group="[]" id="259" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:52)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="266" dst_node_input="b" src_node_id="259" src_node_output="result" />
	<Node group="[]" id="266" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="268" dst_node_input="sel" src_node_id="266" src_node_output="result" />
	<Edge dst_node_id="271" dst_node_input="reset" src_node_id="266" src_node_output="result" />
	<Node group="[]" id="267" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="-1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: -1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:125)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="268" dst_node_input="option0" src_node_id="267" src_node_output="output" />
	<Node group="[]" id="260" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:54)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="268" dst_node_input="option1" src_node_id="260" src_node_output="output" />
	<Node group="[]" id="268" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:125)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="269" dst_node_input="b" src_node_id="268" src_node_output="result" />
	<Node group="[]" id="269" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:126)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="270" dst_node_input="a" src_node_id="269" src_node_output="result" />
	<Node group="[]" id="270" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:127)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="271" dst_node_input="input" src_node_id="270" src_node_output="result" />
	<Node group="[]" id="271" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMinMaxStream">
		<Input name="reset" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Stream Max</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamMax(Reductions.java:262)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:127)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Type>max</Type>
		<IsTwosComplement>false</IsTwosComplement>
	</Node>
	<Edge dst_node_id="273" dst_node_input="sel" src_node_id="271" src_node_output="result" />
	<Node group="[]" id="272" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:129)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="273" dst_node_input="option1" src_node_id="272" src_node_output="value" />
	<Node group="[]" id="273" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:129)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="274" dst_node_input="option1" src_node_id="273" src_node_output="result" />
	<Node group="[]" id="274" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:130)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="275" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="276" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="277" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="278" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="279" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="280" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="281" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="282" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="283" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="284" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="285" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="286" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="287" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="288" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="289" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="290" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="291" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="292" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="293" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="294" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="295" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="296" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="297" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="298" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="299" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="300" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="301" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="302" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="303" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="304" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="305" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="306" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="307" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="308" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="309" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="310" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="311" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="312" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="313" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="314" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="315" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="316" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="317" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="318" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="319" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="320" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="321" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="322" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Edge dst_node_id="323" dst_node_input="input" src_node_id="274" src_node_output="result" />
	<Node group="[]" id="278" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="24" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 24</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="329" dst_node_input="input" src_node_id="278" src_node_output="output" />
	<Node group="[]" id="329" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option0" src_node_id="329" src_node_output="output" />
	<Node group="[]" id="277" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="17" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 17</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="328" dst_node_input="input" src_node_id="277" src_node_output="output" />
	<Node group="[]" id="328" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option1" src_node_id="328" src_node_output="output" />
	<Node group="[]" id="276" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="10" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 10</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="327" dst_node_input="input" src_node_id="276" src_node_output="output" />
	<Node group="[]" id="327" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option2" src_node_id="327" src_node_output="output" />
	<Node group="[]" id="275" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="3" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 3</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="326" dst_node_input="input" src_node_id="275" src_node_output="output" />
	<Node group="[]" id="326" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option3" src_node_id="326" src_node_output="output" />
	<Node group="[]" id="279" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="31" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 31</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="330" dst_node_input="input" src_node_id="279" src_node_output="output" />
	<Node group="[]" id="330" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option4" src_node_id="330" src_node_output="output" />
	<Node group="[]" id="280" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="38" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 38</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="331" dst_node_input="input" src_node_id="280" src_node_output="output" />
	<Node group="[]" id="331" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option5" src_node_id="331" src_node_output="output" />
	<Node group="[]" id="281" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="45" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 45</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="332" dst_node_input="input" src_node_id="281" src_node_output="output" />
	<Node group="[]" id="332" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option6" src_node_id="332" src_node_output="output" />
	<Node group="[]" id="285" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="23" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 23</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="336" dst_node_input="input" src_node_id="285" src_node_output="output" />
	<Node group="[]" id="336" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option7" src_node_id="336" src_node_output="output" />
	<Node group="[]" id="284" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="16" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 16</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="335" dst_node_input="input" src_node_id="284" src_node_output="output" />
	<Node group="[]" id="335" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option8" src_node_id="335" src_node_output="output" />
	<Node group="[]" id="283" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="9" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 9</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="334" dst_node_input="input" src_node_id="283" src_node_output="output" />
	<Node group="[]" id="334" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option9" src_node_id="334" src_node_output="output" />
	<Node group="[]" id="282" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="2" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 2</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="333" dst_node_input="input" src_node_id="282" src_node_output="output" />
	<Node group="[]" id="333" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option10" src_node_id="333" src_node_output="output" />
	<Node group="[]" id="286" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="30" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 30</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="337" dst_node_input="input" src_node_id="286" src_node_output="output" />
	<Node group="[]" id="337" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option11" src_node_id="337" src_node_output="output" />
	<Node group="[]" id="287" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="37" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 37</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="338" dst_node_input="input" src_node_id="287" src_node_output="output" />
	<Node group="[]" id="338" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option12" src_node_id="338" src_node_output="output" />
	<Node group="[]" id="288" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="44" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 44</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="339" dst_node_input="input" src_node_id="288" src_node_output="output" />
	<Node group="[]" id="339" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option13" src_node_id="339" src_node_output="output" />
	<Node group="[]" id="292" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="22" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 22</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="343" dst_node_input="input" src_node_id="292" src_node_output="output" />
	<Node group="[]" id="343" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option14" src_node_id="343" src_node_output="output" />
	<Node group="[]" id="291" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="15" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 15</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="342" dst_node_input="input" src_node_id="291" src_node_output="output" />
	<Node group="[]" id="342" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option15" src_node_id="342" src_node_output="output" />
	<Node group="[]" id="290" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="8" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 8</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="341" dst_node_input="input" src_node_id="290" src_node_output="output" />
	<Node group="[]" id="341" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option16" src_node_id="341" src_node_output="output" />
	<Node group="[]" id="289" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="340" dst_node_input="input" src_node_id="289" src_node_output="output" />
	<Node group="[]" id="340" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option17" src_node_id="340" src_node_output="output" />
	<Node group="[]" id="293" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="29" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 29</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="344" dst_node_input="input" src_node_id="293" src_node_output="output" />
	<Node group="[]" id="344" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option18" src_node_id="344" src_node_output="output" />
	<Node group="[]" id="294" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="36" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 36</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="345" dst_node_input="input" src_node_id="294" src_node_output="output" />
	<Node group="[]" id="345" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option19" src_node_id="345" src_node_output="output" />
	<Node group="[]" id="295" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="43" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 43</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="346" dst_node_input="input" src_node_id="295" src_node_output="output" />
	<Node group="[]" id="346" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option20" src_node_id="346" src_node_output="output" />
	<Node group="[]" id="299" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="21" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 21</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="350" dst_node_input="input" src_node_id="299" src_node_output="output" />
	<Node group="[]" id="350" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option21" src_node_id="350" src_node_output="output" />
	<Node group="[]" id="298" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="14" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="349" dst_node_input="input" src_node_id="298" src_node_output="output" />
	<Node group="[]" id="349" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option22" src_node_id="349" src_node_output="output" />
	<Node group="[]" id="297" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="7" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 7</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="348" dst_node_input="input" src_node_id="297" src_node_output="output" />
	<Node group="[]" id="348" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option23" src_node_id="348" src_node_output="output" />
	<Node group="[]" id="296" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="347" dst_node_input="input" src_node_id="296" src_node_output="output" />
	<Node group="[]" id="347" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option24" src_node_id="347" src_node_output="output" />
	<Node group="[]" id="300" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="28" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 28</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="351" dst_node_input="input" src_node_id="300" src_node_output="output" />
	<Node group="[]" id="351" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option25" src_node_id="351" src_node_output="output" />
	<Node group="[]" id="301" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="35" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 35</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="352" dst_node_input="input" src_node_id="301" src_node_output="output" />
	<Node group="[]" id="352" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option26" src_node_id="352" src_node_output="output" />
	<Node group="[]" id="302" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="42" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 42</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="353" dst_node_input="input" src_node_id="302" src_node_output="output" />
	<Node group="[]" id="353" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option27" src_node_id="353" src_node_output="output" />
	<Node group="[]" id="306" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="25" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 25</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="357" dst_node_input="input" src_node_id="306" src_node_output="output" />
	<Node group="[]" id="357" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option28" src_node_id="357" src_node_output="output" />
	<Node group="[]" id="305" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="18" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 18</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="356" dst_node_input="input" src_node_id="305" src_node_output="output" />
	<Node group="[]" id="356" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option29" src_node_id="356" src_node_output="output" />
	<Node group="[]" id="304" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="11" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 11</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="355" dst_node_input="input" src_node_id="304" src_node_output="output" />
	<Node group="[]" id="355" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option30" src_node_id="355" src_node_output="output" />
	<Node group="[]" id="303" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="4" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 4</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="354" dst_node_input="input" src_node_id="303" src_node_output="output" />
	<Node group="[]" id="354" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option31" src_node_id="354" src_node_output="output" />
	<Node group="[]" id="307" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="32" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 32</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="358" dst_node_input="input" src_node_id="307" src_node_output="output" />
	<Node group="[]" id="358" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option32" src_node_id="358" src_node_output="output" />
	<Node group="[]" id="308" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="39" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 39</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="359" dst_node_input="input" src_node_id="308" src_node_output="output" />
	<Node group="[]" id="359" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option33" src_node_id="359" src_node_output="output" />
	<Node group="[]" id="309" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="46" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 46</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="360" dst_node_input="input" src_node_id="309" src_node_output="output" />
	<Node group="[]" id="360" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option34" src_node_id="360" src_node_output="output" />
	<Node group="[]" id="313" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="26" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 26</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="364" dst_node_input="input" src_node_id="313" src_node_output="output" />
	<Node group="[]" id="364" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option35" src_node_id="364" src_node_output="output" />
	<Node group="[]" id="312" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="19" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 19</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="363" dst_node_input="input" src_node_id="312" src_node_output="output" />
	<Node group="[]" id="363" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option36" src_node_id="363" src_node_output="output" />
	<Node group="[]" id="311" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="12" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 12</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="362" dst_node_input="input" src_node_id="311" src_node_output="output" />
	<Node group="[]" id="362" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option37" src_node_id="362" src_node_output="output" />
	<Node group="[]" id="310" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 5</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="361" dst_node_input="input" src_node_id="310" src_node_output="output" />
	<Node group="[]" id="361" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option38" src_node_id="361" src_node_output="output" />
	<Node group="[]" id="314" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="33" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 33</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="365" dst_node_input="input" src_node_id="314" src_node_output="output" />
	<Node group="[]" id="365" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option39" src_node_id="365" src_node_output="output" />
	<Node group="[]" id="315" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="40" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 40</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="366" dst_node_input="input" src_node_id="315" src_node_output="output" />
	<Node group="[]" id="366" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option40" src_node_id="366" src_node_output="output" />
	<Node group="[]" id="316" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="47" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 47</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="367" dst_node_input="input" src_node_id="316" src_node_output="output" />
	<Node group="[]" id="367" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option41" src_node_id="367" src_node_output="output" />
	<Node group="[]" id="320" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="27" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 27</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="371" dst_node_input="input" src_node_id="320" src_node_output="output" />
	<Node group="[]" id="371" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option42" src_node_id="371" src_node_output="output" />
	<Node group="[]" id="319" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="20" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 20</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="370" dst_node_input="input" src_node_id="319" src_node_output="output" />
	<Node group="[]" id="370" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option43" src_node_id="370" src_node_output="output" />
	<Node group="[]" id="318" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="13" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 13</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="369" dst_node_input="input" src_node_id="318" src_node_output="output" />
	<Node group="[]" id="369" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option44" src_node_id="369" src_node_output="output" />
	<Node group="[]" id="317" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 6</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="368" dst_node_input="input" src_node_id="317" src_node_output="output" />
	<Node group="[]" id="368" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option45" src_node_id="368" src_node_output="output" />
	<Node group="[]" id="321" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="34" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 34</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="372" dst_node_input="input" src_node_id="321" src_node_output="output" />
	<Node group="[]" id="372" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option46" src_node_id="372" src_node_output="output" />
	<Node group="[]" id="322" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="41" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 41</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="373" dst_node_input="input" src_node_id="322" src_node_output="output" />
	<Node group="[]" id="373" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option47" src_node_id="373" src_node_output="output" />
	<Node group="[]" id="323" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="48" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 48</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="374" dst_node_input="input" src_node_id="323" src_node_output="output" />
	<Node group="[]" id="374" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:50)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="378" dst_node_input="option48" src_node_id="374" src_node_output="output" />
	<Node group="[]" id="378" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option2" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option3" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option4" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option5" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option6" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option7" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option8" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option9" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option10" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option11" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option12" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option13" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option14" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option15" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option16" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option17" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option18" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option19" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option20" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option21" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option22" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option23" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option24" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option25" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option26" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option27" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option28" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option29" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option30" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option31" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option32" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option33" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option34" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option35" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option36" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option37" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option38" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option39" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option40" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option41" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option42" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option43" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option44" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option45" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option46" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option47" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option48" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:128)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:43)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="379" dst_node_input="i" src_node_id="378" src_node_output="result" />
	<Node group="[]" id="379" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:16, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:43)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="387" dst_node_input="input" src_node_id="379" src_node_output="o" />
	<Edge dst_node_id="394" dst_node_input="input" src_node_id="379" src_node_output="o" />
	<Edge dst_node_id="396" dst_node_input="a" src_node_id="379" src_node_output="o" />
	<Edge dst_node_id="400" dst_node_input="option0" src_node_id="379" src_node_output="o" />
	<Edge dst_node_id="401" dst_node_input="option0" src_node_id="379" src_node_output="o" />
	<Node group="[]" id="383" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:50)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="384" dst_node_input="b" src_node_id="383" src_node_output="value" />
	<Node group="[]" id="384" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:50)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="387" dst_node_input="load" src_node_id="384" src_node_output="result" />
	<Edge dst_node_id="393" dst_node_input="a" src_node_id="384" src_node_output="result" />
	<Node group="[]" id="385" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:52)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge dst_node_id="386" dst_node_input="b" src_node_id="385" src_node_output="value" />
	<Node group="[]" id="386" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:52)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="393" dst_node_input="b" src_node_id="386" src_node_output="result" />
	<Node group="[]" id="393" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="395" dst_node_input="sel" src_node_id="393" src_node_output="result" />
	<Edge dst_node_id="398" dst_node_input="reset" src_node_id="393" src_node_output="result" />
	<Node group="[]" id="394" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="-1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: -1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:125)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="395" dst_node_input="option0" src_node_id="394" src_node_output="output" />
	<Node group="[]" id="387" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:641)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:54)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="395" dst_node_input="option1" src_node_id="387" src_node_output="output" />
	<Node group="[]" id="395" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:125)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="396" dst_node_input="b" src_node_id="395" src_node_output="result" />
	<Node group="[]" id="396" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:126)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="397" dst_node_input="a" src_node_id="396" src_node_output="result" />
	<Node group="[]" id="397" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:127)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="398" dst_node_input="input" src_node_id="397" src_node_output="result" />
	<Node group="[]" id="398" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMinMaxStream">
		<Input name="reset" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Stream Max</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamMax(Reductions.java:262)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:127)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Type>max</Type>
		<IsTwosComplement>false</IsTwosComplement>
	</Node>
	<Edge dst_node_id="400" dst_node_input="sel" src_node_id="398" src_node_output="result" />
	<Node group="[]" id="399" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:129)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="400" dst_node_input="option1" src_node_id="399" src_node_output="value" />
	<Node group="[]" id="400" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:129)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="401" dst_node_input="option1" src_node_id="400" src_node_output="result" />
	<Node group="[]" id="401" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.filters.SignalSeparator.chopOffAfterMin(SignalSeparator.maxj:130)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:57)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="402" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="403" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="404" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="405" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="406" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="407" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="408" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="409" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="410" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="411" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="412" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="413" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="414" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="415" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="416" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="417" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="418" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="419" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="420" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="421" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="422" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="423" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="424" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="425" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="426" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="427" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="428" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="429" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="430" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="431" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="432" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="433" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="434" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="435" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="436" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="437" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="438" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="439" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="440" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="441" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="442" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="443" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="444" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="445" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="446" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="447" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="448" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="449" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Edge dst_node_id="450" dst_node_input="input" src_node_id="401" src_node_output="result" />
	<Node group="[]" id="402" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="3" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 3</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="453" dst_node_input="input" src_node_id="402" src_node_output="output" />
	<Node group="[]" id="453" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option0" src_node_id="453" src_node_output="output" />
	<Node group="[]" id="403" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="2" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 2</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="454" dst_node_input="input" src_node_id="403" src_node_output="output" />
	<Node group="[]" id="454" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option1" src_node_id="454" src_node_output="output" />
	<Node group="[]" id="404" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="455" dst_node_input="input" src_node_id="404" src_node_output="output" />
	<Node group="[]" id="455" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option2" src_node_id="455" src_node_output="output" />
	<Node group="[]" id="405" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="456" dst_node_input="input" src_node_id="405" src_node_output="output" />
	<Node group="[]" id="456" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option3" src_node_id="456" src_node_output="output" />
	<Node group="[]" id="406" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="4" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 4</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="457" dst_node_input="input" src_node_id="406" src_node_output="output" />
	<Node group="[]" id="457" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option4" src_node_id="457" src_node_output="output" />
	<Node group="[]" id="407" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 5</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="458" dst_node_input="input" src_node_id="407" src_node_output="output" />
	<Node group="[]" id="458" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option5" src_node_id="458" src_node_output="output" />
	<Node group="[]" id="408" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 6</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="459" dst_node_input="input" src_node_id="408" src_node_output="output" />
	<Node group="[]" id="459" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option6" src_node_id="459" src_node_output="output" />
	<Node group="[]" id="409" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="10" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 10</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="460" dst_node_input="input" src_node_id="409" src_node_output="output" />
	<Node group="[]" id="460" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option7" src_node_id="460" src_node_output="output" />
	<Node group="[]" id="410" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="9" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 9</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="461" dst_node_input="input" src_node_id="410" src_node_output="output" />
	<Node group="[]" id="461" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option8" src_node_id="461" src_node_output="output" />
	<Node group="[]" id="411" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="8" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 8</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="462" dst_node_input="input" src_node_id="411" src_node_output="output" />
	<Node group="[]" id="462" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option9" src_node_id="462" src_node_output="output" />
	<Node group="[]" id="412" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="7" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 7</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="463" dst_node_input="input" src_node_id="412" src_node_output="output" />
	<Node group="[]" id="463" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option10" src_node_id="463" src_node_output="output" />
	<Node group="[]" id="413" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="11" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 11</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="464" dst_node_input="input" src_node_id="413" src_node_output="output" />
	<Node group="[]" id="464" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option11" src_node_id="464" src_node_output="output" />
	<Node group="[]" id="414" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="12" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 12</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="465" dst_node_input="input" src_node_id="414" src_node_output="output" />
	<Node group="[]" id="465" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option12" src_node_id="465" src_node_output="output" />
	<Node group="[]" id="415" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="13" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 13</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="466" dst_node_input="input" src_node_id="415" src_node_output="output" />
	<Node group="[]" id="466" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option13" src_node_id="466" src_node_output="output" />
	<Node group="[]" id="416" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="17" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 17</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="467" dst_node_input="input" src_node_id="416" src_node_output="output" />
	<Node group="[]" id="467" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option14" src_node_id="467" src_node_output="output" />
	<Node group="[]" id="417" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="16" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 16</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="468" dst_node_input="input" src_node_id="417" src_node_output="output" />
	<Node group="[]" id="468" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option15" src_node_id="468" src_node_output="output" />
	<Node group="[]" id="418" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="15" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 15</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="469" dst_node_input="input" src_node_id="418" src_node_output="output" />
	<Node group="[]" id="469" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option16" src_node_id="469" src_node_output="output" />
	<Node group="[]" id="419" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="14" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="470" dst_node_input="input" src_node_id="419" src_node_output="output" />
	<Node group="[]" id="470" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option17" src_node_id="470" src_node_output="output" />
	<Node group="[]" id="420" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="18" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 18</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="471" dst_node_input="input" src_node_id="420" src_node_output="output" />
	<Node group="[]" id="471" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option18" src_node_id="471" src_node_output="output" />
	<Node group="[]" id="421" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="19" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 19</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="472" dst_node_input="input" src_node_id="421" src_node_output="output" />
	<Node group="[]" id="472" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option19" src_node_id="472" src_node_output="output" />
	<Node group="[]" id="422" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="20" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 20</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="473" dst_node_input="input" src_node_id="422" src_node_output="output" />
	<Node group="[]" id="473" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option20" src_node_id="473" src_node_output="output" />
	<Node group="[]" id="423" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="24" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 24</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="474" dst_node_input="input" src_node_id="423" src_node_output="output" />
	<Node group="[]" id="474" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option21" src_node_id="474" src_node_output="output" />
	<Node group="[]" id="424" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="23" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 23</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="475" dst_node_input="input" src_node_id="424" src_node_output="output" />
	<Node group="[]" id="475" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option22" src_node_id="475" src_node_output="output" />
	<Node group="[]" id="425" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="22" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 22</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="476" dst_node_input="input" src_node_id="425" src_node_output="output" />
	<Node group="[]" id="476" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option23" src_node_id="476" src_node_output="output" />
	<Node group="[]" id="426" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="21" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 21</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="477" dst_node_input="input" src_node_id="426" src_node_output="output" />
	<Node group="[]" id="477" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option24" src_node_id="477" src_node_output="output" />
	<Node group="[]" id="427" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="25" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 25</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="478" dst_node_input="input" src_node_id="427" src_node_output="output" />
	<Node group="[]" id="478" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option25" src_node_id="478" src_node_output="output" />
	<Node group="[]" id="428" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="26" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 26</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="479" dst_node_input="input" src_node_id="428" src_node_output="output" />
	<Node group="[]" id="479" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option26" src_node_id="479" src_node_output="output" />
	<Node group="[]" id="429" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="27" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 27</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="480" dst_node_input="input" src_node_id="429" src_node_output="output" />
	<Node group="[]" id="480" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option27" src_node_id="480" src_node_output="output" />
	<Node group="[]" id="430" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="31" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 31</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="481" dst_node_input="input" src_node_id="430" src_node_output="output" />
	<Node group="[]" id="481" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option28" src_node_id="481" src_node_output="output" />
	<Node group="[]" id="431" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="30" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 30</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="482" dst_node_input="input" src_node_id="431" src_node_output="output" />
	<Node group="[]" id="482" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option29" src_node_id="482" src_node_output="output" />
	<Node group="[]" id="432" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="29" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 29</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="483" dst_node_input="input" src_node_id="432" src_node_output="output" />
	<Node group="[]" id="483" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option30" src_node_id="483" src_node_output="output" />
	<Node group="[]" id="433" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="28" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 28</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="484" dst_node_input="input" src_node_id="433" src_node_output="output" />
	<Node group="[]" id="484" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option31" src_node_id="484" src_node_output="output" />
	<Node group="[]" id="434" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="32" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 32</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="485" dst_node_input="input" src_node_id="434" src_node_output="output" />
	<Node group="[]" id="485" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option32" src_node_id="485" src_node_output="output" />
	<Node group="[]" id="435" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="33" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 33</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="486" dst_node_input="input" src_node_id="435" src_node_output="output" />
	<Node group="[]" id="486" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option33" src_node_id="486" src_node_output="output" />
	<Node group="[]" id="436" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="34" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 34</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="487" dst_node_input="input" src_node_id="436" src_node_output="output" />
	<Node group="[]" id="487" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option34" src_node_id="487" src_node_output="output" />
	<Node group="[]" id="437" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="38" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 38</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="488" dst_node_input="input" src_node_id="437" src_node_output="output" />
	<Node group="[]" id="488" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option35" src_node_id="488" src_node_output="output" />
	<Node group="[]" id="438" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="37" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 37</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="489" dst_node_input="input" src_node_id="438" src_node_output="output" />
	<Node group="[]" id="489" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option36" src_node_id="489" src_node_output="output" />
	<Node group="[]" id="439" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="36" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 36</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="490" dst_node_input="input" src_node_id="439" src_node_output="output" />
	<Node group="[]" id="490" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option37" src_node_id="490" src_node_output="output" />
	<Node group="[]" id="440" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="35" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 35</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="491" dst_node_input="input" src_node_id="440" src_node_output="output" />
	<Node group="[]" id="491" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option38" src_node_id="491" src_node_output="output" />
	<Node group="[]" id="441" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="39" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 39</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="492" dst_node_input="input" src_node_id="441" src_node_output="output" />
	<Node group="[]" id="492" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option39" src_node_id="492" src_node_output="output" />
	<Node group="[]" id="442" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="40" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 40</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="493" dst_node_input="input" src_node_id="442" src_node_output="output" />
	<Node group="[]" id="493" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option40" src_node_id="493" src_node_output="output" />
	<Node group="[]" id="443" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="41" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 41</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="494" dst_node_input="input" src_node_id="443" src_node_output="output" />
	<Node group="[]" id="494" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option41" src_node_id="494" src_node_output="output" />
	<Node group="[]" id="444" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="45" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 45</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="495" dst_node_input="input" src_node_id="444" src_node_output="output" />
	<Node group="[]" id="495" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option42" src_node_id="495" src_node_output="output" />
	<Node group="[]" id="445" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="44" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 44</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="496" dst_node_input="input" src_node_id="445" src_node_output="output" />
	<Node group="[]" id="496" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option43" src_node_id="496" src_node_output="output" />
	<Node group="[]" id="446" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="43" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 43</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="497" dst_node_input="input" src_node_id="446" src_node_output="output" />
	<Node group="[]" id="497" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option44" src_node_id="497" src_node_output="output" />
	<Node group="[]" id="447" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="42" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 42</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="498" dst_node_input="input" src_node_id="447" src_node_output="output" />
	<Node group="[]" id="498" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option45" src_node_id="498" src_node_output="output" />
	<Node group="[]" id="448" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="46" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 46</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="499" dst_node_input="input" src_node_id="448" src_node_output="output" />
	<Node group="[]" id="499" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option46" src_node_id="499" src_node_output="output" />
	<Node group="[]" id="449" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="47" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 47</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="500" dst_node_input="input" src_node_id="449" src_node_output="output" />
	<Node group="[]" id="500" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option47" src_node_id="500" src_node_output="output" />
	<Node group="[]" id="450" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="48" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>stream offset: 48</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
spdm.filters.SignalSeparator.formLinearRoiFromAccesPatternQ(SignalSeparator.maxj:117)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:59)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="501" dst_node_input="input" src_node_id="450" src_node_output="output" />
	<Node group="[]" id="501" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeHold">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="input" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>Hold</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions.streamHold(Reductions.java:666)
spdm.filters.SignalSeparator.separate(SignalSeparator.maxj:60)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:51)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="502" dst_node_input="option48" src_node_id="501" src_node_output="output" />
	<Node group="[]" id="502" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option2" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option3" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option4" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option5" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option6" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option7" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option8" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option9" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option10" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option11" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option12" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option13" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option14" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option15" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option16" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option17" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option18" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option19" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option20" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option21" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option22" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option23" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option24" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option25" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option26" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option27" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option28" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option29" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option30" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option31" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option32" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option33" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option34" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option35" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option36" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option37" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option38" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option39" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option40" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option41" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option42" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option43" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option44" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option45" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option46" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option47" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option48" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:128)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:53)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="503" dst_node_input="i" src_node_id="502" src_node_output="result" />
	<Node group="[]" id="503" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:53)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="515" dst_node_input="a" src_node_id="503" src_node_output="o" />
	<Edge dst_node_id="516" dst_node_input="a" src_node_id="503" src_node_output="o" />
	<Edge dst_node_id="520" dst_node_input="summand" src_node_id="503" src_node_output="o" />
	<Node group="[]" id="519" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:94)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="520" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="521" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="522" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="524" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="526" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="527" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="528" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="529" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="531" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="533" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="538" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="541" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="544" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="547" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Edge dst_node_id="552" dst_node_input="enable" src_node_id="519" src_node_output="value" />
	<Node group="[]" id="520" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:94)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="553" dst_node_input="i" src_node_id="520" src_node_output="accumulate" />
	<Node group="[]" id="553" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:122)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="568" dst_node_input="a" src_node_id="553" src_node_output="o" />
	<Edge dst_node_id="574" dst_node_input="b" src_node_id="553" src_node_output="o" />
	<Edge dst_node_id="575" dst_node_input="b" src_node_id="553" src_node_output="o" />
	<Edge dst_node_id="576" dst_node_input="b" src_node_id="553" src_node_output="o" />
	<Edge dst_node_id="581" dst_node_input="b" src_node_id="553" src_node_output="o" />
	<Edge dst_node_id="654" dst_node_input="input" src_node_id="553" src_node_output="o" />
	<Node group="[]" id="504" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(6, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option2" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option3" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option4" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option5" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option6" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option7" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option8" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option9" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option10" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option11" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option12" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option13" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option14" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option15" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option16" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option17" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option18" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option19" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option20" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option21" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option22" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option23" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option24" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option25" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option26" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option27" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option28" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option29" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option30" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option31" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option32" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option33" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option34" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option35" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option36" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option37" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option38" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option39" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option40" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option41" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option42" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option43" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option44" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option45" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option46" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option47" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Input name="option48" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:128)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:54)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="505" dst_node_input="i" src_node_id="504" src_node_output="result" />
	<Node group="[]" id="505" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:54)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="517" dst_node_input="a" src_node_id="505" src_node_output="o" />
	<Edge dst_node_id="518" dst_node_input="a" src_node_id="505" src_node_output="o" />
	<Edge dst_node_id="527" dst_node_input="summand" src_node_id="505" src_node_output="o" />
	<Edge dst_node_id="535" dst_node_input="a" src_node_id="505" src_node_output="o" />
	<Node group="[]" id="527" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:107)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="558" dst_node_input="i" src_node_id="527" src_node_output="accumulate" />
	<Node group="[]" id="558" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:134)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="568" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="586" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="587" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="588" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="593" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="600" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="602" dst_node_input="a" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="602" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="605" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Edge dst_node_id="615" dst_node_input="b" src_node_id="558" src_node_output="o" />
	<Node group="[]" id="568" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:147)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="569" dst_node_input="a" src_node_id="568" src_node_output="result" />
	<Node group="[]" id="119" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="separator_threshold_factor" type="dfeFloat(8, 24)" />
		<Text>Scalar input (separator_threshold_factor)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:43)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>separator_threshold_factor</Name>
	</Node>
	<Edge dst_node_id="569" dst_node_input="b" src_node_id="119" src_node_output="separator_threshold_factor" />
	<Node group="[]" id="569" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:147)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="647" dst_node_input="a" src_node_id="569" src_node_output="result" />
	<Node group="[]" id="107" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_roi_prop_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_roi_prop_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>io_roi_prop_force_disabled</Name>
	</Node>
	<Edge dst_node_id="108" dst_node_input="a" src_node_id="107" src_node_output="io_roi_prop_force_disabled" />
	<Node group="[]" id="108" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="109" dst_node_input="b" src_node_id="108" src_node_output="result" />
	<Node group="[]" id="109" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="110" dst_node_input="enable" src_node_id="109" src_node_output="result" />
	<Node group="[]" id="110" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeInput">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="5" name="data" type="dfeBits(112)" />
		<Text>Input(roi_prop)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>roi_prop</Name>
	</Node>
	<Edge dst_node_id="111" dst_node_input="a" src_node_id="110" src_node_output="data" />
	<Edge dst_node_id="113" dst_node_input="a" src_node_id="110" src_node_output="data" />
	<Edge dst_node_id="115" dst_node_input="a" src_node_id="110" src_node_output="data" />
	<Edge dst_node_id="117" dst_node_input="a" src_node_id="110" src_node_output="data" />
	<Node group="[]" id="115" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(112)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[95:64]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>64</Base>
		<Width>32</Width>
	</Node>
	<Edge dst_node_id="116" dst_node_input="input" src_node_id="115" src_node_output="result" />
	<Node group="[]" id="116" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:32, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="571" dst_node_input="a" src_node_id="116" src_node_output="output" />
	<Edge dst_node_id="653" dst_node_input="input" src_node_id="116" src_node_output="output" />
	<Node group="[]" id="570" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:837)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:150)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="571" dst_node_input="b" src_node_id="570" src_node_output="value" />
	<Node group="[]" id="571" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:837)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:150)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="647" dst_node_input="b" src_node_id="571" src_node_output="result" />
	<Node group="[]" id="647" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:209)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="648" dst_node_input="b" src_node_id="647" src_node_output="result" />
	<Node group="[]" id="648" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:209)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="651" dst_node_input="a" src_node_id="648" src_node_output="result" />
	<Node group="[]" id="649" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_estimation_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_estimation_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>io_estimation_force_disabled</Name>
	</Node>
	<Edge dst_node_id="650" dst_node_input="a" src_node_id="649" src_node_output="io_estimation_force_disabled" />
	<Node group="[]" id="650" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="651" dst_node_input="b" src_node_id="650" src_node_output="result" />
	<Node group="[]" id="651" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="652" dst_node_input="output_control" src_node_id="651" src_node_output="result" />
	<Node group="[]" id="598" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.08333333333333333</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:163)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.08333333333333333</Value>
	</Node>
	<Edge dst_node_id="599" dst_node_input="i" src_node_id="598" src_node_output="value" />
	<Node group="[]" id="599" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="0" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:163)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="600" dst_node_input="a" src_node_id="599" src_node_output="o" />
	<Node group="[]" id="600" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:163)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="606" dst_node_input="a" src_node_id="600" src_node_output="result" />
	<Edge dst_node_id="616" dst_node_input="a" src_node_id="600" src_node_output="result" />
	<Node group="[]" id="506" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:64)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="508" dst_node_input="enable" src_node_id="506" src_node_output="value" />
	<Node group="[]" id="507" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:64)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge dst_node_id="508" dst_node_input="max" src_node_id="507" src_node_output="value" />
	<Node group="[]" id="508" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:64)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="509" dst_node_input="i" src_node_id="508" src_node_output="count" />
	<Edge dst_node_id="511" dst_node_input="enable" src_node_id="508" src_node_output="wrap" />
	<Node group="[]" id="510" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:71)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge dst_node_id="511" dst_node_input="max" src_node_id="510" src_node_output="value" />
	<Node group="[]" id="511" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:71)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="512" dst_node_input="i" src_node_id="511" src_node_output="count" />
	<Node group="[]" id="512" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:72)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="514" dst_node_input="a" src_node_id="512" src_node_output="o" />
	<Edge dst_node_id="514" dst_node_input="b" src_node_id="512" src_node_output="o" />
	<Edge dst_node_id="516" dst_node_input="b" src_node_id="512" src_node_output="o" />
	<Edge dst_node_id="518" dst_node_input="b" src_node_id="512" src_node_output="o" />
	<Edge dst_node_id="525" dst_node_input="b" src_node_id="512" src_node_output="o" />
	<Edge dst_node_id="532" dst_node_input="b" src_node_id="512" src_node_output="o" />
	<Edge dst_node_id="540" dst_node_input="option1" src_node_id="512" src_node_output="o" />
	<Node group="[]" id="518" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:89)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="529" dst_node_input="summand" src_node_id="518" src_node_output="result" />
	<Edge dst_node_id="532" dst_node_input="a" src_node_id="518" src_node_output="result" />
	<Node group="[]" id="532" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:111)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="533" dst_node_input="summand" src_node_id="532" src_node_output="result" />
	<Node group="[]" id="533" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:111)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="562" dst_node_input="i" src_node_id="533" src_node_output="accumulate" />
	<Node group="[]" id="562" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:138)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="593" dst_node_input="a" src_node_id="562" src_node_output="o" />
	<Node group="[]" id="593" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:161)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="595" dst_node_input="a" src_node_id="593" src_node_output="result" />
	<Node group="[]" id="529" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:109)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="560" dst_node_input="i" src_node_id="529" src_node_output="accumulate" />
	<Node group="[]" id="560" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:136)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="587" dst_node_input="a" src_node_id="560" src_node_output="o" />
	<Node group="[]" id="587" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:159)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="594" dst_node_input="a" src_node_id="587" src_node_output="result" />
	<Edge dst_node_id="594" dst_node_input="b" src_node_id="587" src_node_output="result" />
	<Edge dst_node_id="618" dst_node_input="b" src_node_id="587" src_node_output="result" />
	<Edge dst_node_id="620" dst_node_input="a" src_node_id="587" src_node_output="result" />
	<Node group="[]" id="594" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:161)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="595" dst_node_input="b" src_node_id="594" src_node_output="result" />
	<Node group="[]" id="595" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:161)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="596" dst_node_input="a" src_node_id="595" src_node_output="result" />
	<Edge dst_node_id="597" dst_node_input="option1" src_node_id="595" src_node_output="result" />
	<Node group="[]" id="572" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.08333333333333333</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:152)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.08333333333333333</Value>
	</Node>
	<Edge dst_node_id="573" dst_node_input="i" src_node_id="572" src_node_output="value" />
	<Node group="[]" id="573" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="0" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:152)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="579" dst_node_input="b" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="580" dst_node_input="option0" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="584" dst_node_input="b" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="585" dst_node_input="option0" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="591" dst_node_input="b" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="592" dst_node_input="option0" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="596" dst_node_input="b" src_node_id="573" src_node_output="o" />
	<Edge dst_node_id="597" dst_node_input="option0" src_node_id="573" src_node_output="o" />
	<Node group="[]" id="596" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:161)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="597" dst_node_input="sel" src_node_id="596" src_node_output="result" />
	<Node group="[]" id="597" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:161)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="615" dst_node_input="a" src_node_id="597" src_node_output="result" />
	<Node group="[]" id="615" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="616" dst_node_input="b" src_node_id="615" src_node_output="result" />
	<Node group="[]" id="616" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="624" dst_node_input="a" src_node_id="616" src_node_output="result" />
	<Node group="[]" id="534" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:113)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="535" dst_node_input="b" src_node_id="534" src_node_output="value" />
	<Node group="[]" id="535" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeNeq">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neq(DFEVar.java:640)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:113)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="537" dst_node_input="sel" src_node_id="535" src_node_output="result" />
	<Edge dst_node_id="540" dst_node_input="sel" src_node_id="535" src_node_output="result" />
	<Edge dst_node_id="543" dst_node_input="sel" src_node_id="535" src_node_output="result" />
	<Edge dst_node_id="546" dst_node_input="sel" src_node_id="535" src_node_output="result" />
	<Edge dst_node_id="551" dst_node_input="sel" src_node_id="535" src_node_output="result" />
	<Node group="[]" id="545" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}\n0x00000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:117)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>00000000000000000000</Value>
		<HexValue>0x00000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="546" dst_node_input="option0" src_node_id="545" src_node_output="value" />
	<Node group="[]" id="514" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:75)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="546" dst_node_input="option1" src_node_id="514" src_node_output="result" />
	<Node group="[]" id="546" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:117)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="547" dst_node_input="summand" src_node_id="546" src_node_output="result" />
	<Node group="[]" id="547" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:117)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="566" dst_node_input="i" src_node_id="547" src_node_output="accumulate" />
	<Node group="[]" id="566" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:143)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="621" dst_node_input="a" src_node_id="566" src_node_output="o" />
	<Node group="[]" id="603" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:166)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge dst_node_id="604" dst_node_input="i" src_node_id="603" src_node_output="value" />
	<Node group="[]" id="604" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="0" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:166)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="607" dst_node_input="a" src_node_id="604" src_node_output="o" />
	<Edge dst_node_id="617" dst_node_input="a" src_node_id="604" src_node_output="o" />
	<Node group="[]" id="539" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}\n0x00000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:115)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>00000000000000000000</Value>
		<HexValue>0x00000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="540" dst_node_input="option0" src_node_id="539" src_node_output="value" />
	<Node group="[]" id="540" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:115)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="541" dst_node_input="summand" src_node_id="540" src_node_output="result" />
	<Node group="[]" id="541" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:115)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="564" dst_node_input="i" src_node_id="541" src_node_output="accumulate" />
	<Node group="[]" id="564" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:141)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="617" dst_node_input="b" src_node_id="564" src_node_output="o" />
	<Node group="[]" id="617" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="619" dst_node_input="a" src_node_id="617" src_node_output="result" />
	<Node group="[]" id="550" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}\n0x00000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:118)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>00000000000000000000</Value>
		<HexValue>0x00000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="551" dst_node_input="option0" src_node_id="550" src_node_output="value" />
	<Node group="[]" id="548" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:118)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="549" dst_node_input="i" src_node_id="548" src_node_output="value" />
	<Node group="[]" id="549" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:118)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="551" dst_node_input="option1" src_node_id="549" src_node_output="o" />
	<Node group="[]" id="551" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:118)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="552" dst_node_input="summand" src_node_id="551" src_node_output="result" />
	<Node group="[]" id="552" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:118)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="567" dst_node_input="i" src_node_id="552" src_node_output="accumulate" />
	<Node group="[]" id="567" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:144)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="608" dst_node_input="a" src_node_id="567" src_node_output="o" />
	<Edge dst_node_id="618" dst_node_input="a" src_node_id="567" src_node_output="o" />
	<Node group="[]" id="618" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="619" dst_node_input="b" src_node_id="618" src_node_output="result" />
	<Node group="[]" id="619" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="620" dst_node_input="b" src_node_id="619" src_node_output="result" />
	<Node group="[]" id="620" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="621" dst_node_input="b" src_node_id="620" src_node_output="result" />
	<Node group="[]" id="621" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="622" dst_node_input="a" src_node_id="621" src_node_output="result" />
	<Node group="[]" id="117" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(112)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>[111:96]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>96</Base>
		<Width>16</Width>
	</Node>
	<Edge dst_node_id="118" dst_node_input="input" src_node_id="117" src_node_output="result" />
	<Node group="[]" id="118" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(16)" />
		<Output latency="0" name="output" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:16, -4, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="601" dst_node_input="i" src_node_id="118" src_node_output="output" />
	<Node group="[]" id="601" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(16, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:164)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="612" dst_node_input="b" src_node_id="601" src_node_output="o" />
	<Edge dst_node_id="622" dst_node_input="b" src_node_id="601" src_node_output="o" />
	<Node group="[]" id="622" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="623" dst_node_input="a" src_node_id="622" src_node_output="result" />
	<Node group="[]" id="602" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:165)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="613" dst_node_input="b" src_node_id="602" src_node_output="result" />
	<Edge dst_node_id="623" dst_node_input="b" src_node_id="602" src_node_output="result" />
	<Node group="[]" id="623" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="624" dst_node_input="b" src_node_id="623" src_node_output="result" />
	<Node group="[]" id="624" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:168)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="644" dst_node_input="a" src_node_id="624" src_node_output="result" />
	<Node group="[]" id="644" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:185)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="645" dst_node_input="i" src_node_id="644" src_node_output="result" />
	<Node group="[]" id="645" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="2" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:185)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="646" dst_node_input="a" src_node_id="645" src_node_output="o" />
	<Node group="[]" id="120" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="nm_per_px" type="dfeFloat(8, 24)" />
		<Text>Scalar input (nm_per_px)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:44)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>nm_per_px</Name>
	</Node>
	<Edge dst_node_id="629" dst_node_input="b" src_node_id="120" src_node_output="nm_per_px" />
	<Edge dst_node_id="634" dst_node_input="b" src_node_id="120" src_node_output="nm_per_px" />
	<Edge dst_node_id="637" dst_node_input="b" src_node_id="120" src_node_output="nm_per_px" />
	<Edge dst_node_id="640" dst_node_input="b" src_node_id="120" src_node_output="nm_per_px" />
	<Edge dst_node_id="643" dst_node_input="b" src_node_id="120" src_node_output="nm_per_px" />
	<Edge dst_node_id="646" dst_node_input="b" src_node_id="120" src_node_output="nm_per_px" />
	<Node group="[]" id="646" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:185)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="666" dst_node_input="input" src_node_id="646" src_node_output="result" />
	<Node group="[]" id="666" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="667" dst_node_input="in0" src_node_id="666" src_node_output="output" />
	<Node group="[]" id="509" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(3, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:65)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="513" dst_node_input="a" src_node_id="509" src_node_output="o" />
	<Edge dst_node_id="513" dst_node_input="b" src_node_id="509" src_node_output="o" />
	<Edge dst_node_id="515" dst_node_input="b" src_node_id="509" src_node_output="o" />
	<Edge dst_node_id="517" dst_node_input="b" src_node_id="509" src_node_output="o" />
	<Edge dst_node_id="523" dst_node_input="b" src_node_id="509" src_node_output="o" />
	<Edge dst_node_id="530" dst_node_input="b" src_node_id="509" src_node_output="o" />
	<Edge dst_node_id="537" dst_node_input="option1" src_node_id="509" src_node_output="o" />
	<Node group="[]" id="517" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:88)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="528" dst_node_input="summand" src_node_id="517" src_node_output="result" />
	<Edge dst_node_id="530" dst_node_input="a" src_node_id="517" src_node_output="result" />
	<Node group="[]" id="530" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:110)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="531" dst_node_input="summand" src_node_id="530" src_node_output="result" />
	<Node group="[]" id="531" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:110)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="561" dst_node_input="i" src_node_id="531" src_node_output="accumulate" />
	<Node group="[]" id="561" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:137)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="588" dst_node_input="a" src_node_id="561" src_node_output="o" />
	<Node group="[]" id="588" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:160)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="590" dst_node_input="a" src_node_id="588" src_node_output="result" />
	<Node group="[]" id="528" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:108)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="559" dst_node_input="i" src_node_id="528" src_node_output="accumulate" />
	<Node group="[]" id="559" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:135)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="586" dst_node_input="a" src_node_id="559" src_node_output="o" />
	<Node group="[]" id="586" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:158)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="589" dst_node_input="a" src_node_id="586" src_node_output="result" />
	<Edge dst_node_id="589" dst_node_input="b" src_node_id="586" src_node_output="result" />
	<Edge dst_node_id="608" dst_node_input="b" src_node_id="586" src_node_output="result" />
	<Edge dst_node_id="610" dst_node_input="a" src_node_id="586" src_node_output="result" />
	<Node group="[]" id="589" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:160)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="590" dst_node_input="b" src_node_id="589" src_node_output="result" />
	<Node group="[]" id="590" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:160)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="591" dst_node_input="a" src_node_id="590" src_node_output="result" />
	<Edge dst_node_id="592" dst_node_input="option1" src_node_id="590" src_node_output="result" />
	<Node group="[]" id="591" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:160)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="592" dst_node_input="sel" src_node_id="591" src_node_output="result" />
	<Node group="[]" id="592" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:160)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="605" dst_node_input="a" src_node_id="592" src_node_output="result" />
	<Node group="[]" id="605" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="606" dst_node_input="b" src_node_id="605" src_node_output="result" />
	<Node group="[]" id="606" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="614" dst_node_input="a" src_node_id="606" src_node_output="result" />
	<Node group="[]" id="542" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}\n0x00000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:116)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>00000000000000000000</Value>
		<HexValue>0x00000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="543" dst_node_input="option0" src_node_id="542" src_node_output="value" />
	<Node group="[]" id="513" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:74)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="543" dst_node_input="option1" src_node_id="513" src_node_output="result" />
	<Node group="[]" id="543" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:116)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="544" dst_node_input="summand" src_node_id="543" src_node_output="result" />
	<Node group="[]" id="544" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:116)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="565" dst_node_input="i" src_node_id="544" src_node_output="accumulate" />
	<Node group="[]" id="565" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:142)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="611" dst_node_input="a" src_node_id="565" src_node_output="o" />
	<Node group="[]" id="536" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>{HWOffsetFix:20, -4, TWOSCOMPLEMENT}\n0x00000; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:114)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>00000000000000000000</Value>
		<HexValue>0x00000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="537" dst_node_input="option0" src_node_id="536" src_node_output="value" />
	<Node group="[]" id="537" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:114)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="538" dst_node_input="summand" src_node_id="537" src_node_output="result" />
	<Node group="[]" id="538" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:114)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="563" dst_node_input="i" src_node_id="538" src_node_output="accumulate" />
	<Node group="[]" id="563" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:140)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="607" dst_node_input="b" src_node_id="563" src_node_output="o" />
	<Node group="[]" id="607" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="609" dst_node_input="a" src_node_id="607" src_node_output="result" />
	<Node group="[]" id="608" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="609" dst_node_input="b" src_node_id="608" src_node_output="result" />
	<Node group="[]" id="609" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="610" dst_node_input="b" src_node_id="609" src_node_output="result" />
	<Node group="[]" id="610" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="611" dst_node_input="b" src_node_id="610" src_node_output="result" />
	<Node group="[]" id="611" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="612" dst_node_input="a" src_node_id="611" src_node_output="result" />
	<Node group="[]" id="612" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="613" dst_node_input="a" src_node_id="612" src_node_output="result" />
	<Node group="[]" id="613" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="614" dst_node_input="b" src_node_id="613" src_node_output="result" />
	<Node group="[]" id="614" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:167)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="641" dst_node_input="a" src_node_id="614" src_node_output="result" />
	<Node group="[]" id="641" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:184)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="642" dst_node_input="i" src_node_id="641" src_node_output="result" />
	<Node group="[]" id="642" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="2" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:184)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="643" dst_node_input="a" src_node_id="642" src_node_output="o" />
	<Node group="[]" id="643" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:184)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="664" dst_node_input="input" src_node_id="643" src_node_output="result" />
	<Node group="[]" id="664" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="665" dst_node_input="in0" src_node_id="664" src_node_output="output" />
	<Node group="[]" id="516" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:83)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="522" dst_node_input="summand" src_node_id="516" src_node_output="result" />
	<Edge dst_node_id="525" dst_node_input="a" src_node_id="516" src_node_output="result" />
	<Node group="[]" id="525" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:98)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="526" dst_node_input="summand" src_node_id="525" src_node_output="result" />
	<Node group="[]" id="526" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:98)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="557" dst_node_input="i" src_node_id="526" src_node_output="accumulate" />
	<Node group="[]" id="557" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:126)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="581" dst_node_input="a" src_node_id="557" src_node_output="o" />
	<Node group="[]" id="581" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:156)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="583" dst_node_input="a" src_node_id="581" src_node_output="result" />
	<Node group="[]" id="522" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:96)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="555" dst_node_input="i" src_node_id="522" src_node_output="accumulate" />
	<Node group="[]" id="555" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:124)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="575" dst_node_input="a" src_node_id="555" src_node_output="o" />
	<Node group="[]" id="575" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:154)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="582" dst_node_input="a" src_node_id="575" src_node_output="result" />
	<Edge dst_node_id="582" dst_node_input="b" src_node_id="575" src_node_output="result" />
	<Edge dst_node_id="631" dst_node_input="a" src_node_id="575" src_node_output="result" />
	<Node group="[]" id="582" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:156)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="583" dst_node_input="b" src_node_id="582" src_node_output="result" />
	<Node group="[]" id="583" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:156)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="584" dst_node_input="a" src_node_id="583" src_node_output="result" />
	<Edge dst_node_id="585" dst_node_input="option1" src_node_id="583" src_node_output="result" />
	<Node group="[]" id="584" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:156)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="585" dst_node_input="sel" src_node_id="584" src_node_output="result" />
	<Node group="[]" id="585" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:156)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="638" dst_node_input="a" src_node_id="585" src_node_output="result" />
	<Node group="[]" id="638" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:183)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="639" dst_node_input="i" src_node_id="638" src_node_output="result" />
	<Node group="[]" id="639" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="2" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:183)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="640" dst_node_input="a" src_node_id="639" src_node_output="o" />
	<Node group="[]" id="640" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:183)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="662" dst_node_input="input" src_node_id="640" src_node_output="result" />
	<Node group="[]" id="662" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="663" dst_node_input="in0" src_node_id="662" src_node_output="output" />
	<Node group="[]" id="515" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:82)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="521" dst_node_input="summand" src_node_id="515" src_node_output="result" />
	<Edge dst_node_id="523" dst_node_input="a" src_node_id="515" src_node_output="result" />
	<Node group="[]" id="523" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="5" name="result" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:97)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="524" dst_node_input="summand" src_node_id="523" src_node_output="result" />
	<Node group="[]" id="524" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:97)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="556" dst_node_input="i" src_node_id="524" src_node_output="accumulate" />
	<Node group="[]" id="556" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:125)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="576" dst_node_input="a" src_node_id="556" src_node_output="o" />
	<Node group="[]" id="576" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:155)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="578" dst_node_input="a" src_node_id="576" src_node_output="result" />
	<Node group="[]" id="521" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAccumulator">
		<Input name="summand" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Input name="clearAccumulate" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="accumulate" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Text>MaxDCAccumulator_hwOffsetFix(20, -4, TWOSCOMPLEMENT)_MONADIC</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.makeAccumulator(Accumulator.java:111)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:95)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<AccumMode>MONADIC</AccumMode>
	</Node>
	<Edge dst_node_id="554" dst_node_input="i" src_node_id="521" src_node_output="accumulate" />
	<Node group="[]" id="554" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(20, -4, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:123)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="574" dst_node_input="a" src_node_id="554" src_node_output="o" />
	<Node group="[]" id="574" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1006)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:153)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="577" dst_node_input="a" src_node_id="574" src_node_output="result" />
	<Edge dst_node_id="577" dst_node_input="b" src_node_id="574" src_node_output="result" />
	<Edge dst_node_id="626" dst_node_input="a" src_node_id="574" src_node_output="result" />
	<Node group="[]" id="577" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:155)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="578" dst_node_input="b" src_node_id="577" src_node_output="result" />
	<Node group="[]" id="578" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:155)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="579" dst_node_input="a" src_node_id="578" src_node_output="result" />
	<Edge dst_node_id="580" dst_node_input="option1" src_node_id="578" src_node_output="result" />
	<Node group="[]" id="579" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:776)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:155)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="580" dst_node_input="sel" src_node_id="579" src_node_output="result" />
	<Node group="[]" id="580" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
spdm.kernels.SpdmKernel.max(SpdmKernel.maxj:85)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:155)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="635" dst_node_input="a" src_node_id="580" src_node_output="result" />
	<Node group="[]" id="635" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:182)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="636" dst_node_input="i" src_node_id="635" src_node_output="result" />
	<Node group="[]" id="636" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="2" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:364)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:182)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="637" dst_node_input="a" src_node_id="636" src_node_output="o" />
	<Node group="[]" id="637" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:182)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="660" dst_node_input="input" src_node_id="637" src_node_output="result" />
	<Node group="[]" id="660" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="661" dst_node_input="in0" src_node_id="660" src_node_output="output" />
	<Node group="[]" id="113" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(112)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[63:32]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>32</Base>
		<Width>32</Width>
	</Node>
	<Edge dst_node_id="114" dst_node_input="input" src_node_id="113" src_node_output="result" />
	<Node group="[]" id="114" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:32, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="630" dst_node_input="i" src_node_id="114" src_node_output="output" />
	<Node group="[]" id="630" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:181)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="631" dst_node_input="b" src_node_id="630" src_node_output="o" />
	<Node group="[]" id="631" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:181)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="633" dst_node_input="a" src_node_id="631" src_node_output="result" />
	<Node group="[]" id="632" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:181)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge dst_node_id="633" dst_node_input="b" src_node_id="632" src_node_output="value" />
	<Node group="[]" id="633" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:181)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="634" dst_node_input="a" src_node_id="633" src_node_output="result" />
	<Node group="[]" id="634" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:181)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="658" dst_node_input="input" src_node_id="634" src_node_output="result" />
	<Node group="[]" id="658" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="659" dst_node_input="in0" src_node_id="658" src_node_output="output" />
	<Node group="[]" id="111" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSlice">
		<Input name="a" type="dfeBits(112)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[31:0]</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Base>0</Base>
		<Width>32</Width>
	</Node>
	<Edge dst_node_id="112" dst_node_input="input" src_node_id="111" src_node_output="result" />
	<Node group="[]" id="112" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:32, 0, TWOSCOMPLEMENT}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:522)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:41)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="625" dst_node_input="i" src_node_id="112" src_node_output="output" />
	<Node group="[]" id="625" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:180)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="626" dst_node_input="b" src_node_id="625" src_node_output="o" />
	<Node group="[]" id="626" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:180)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="628" dst_node_input="a" src_node_id="626" src_node_output="result" />
	<Node group="[]" id="627" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:180)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge dst_node_id="628" dst_node_input="b" src_node_id="627" src_node_output="value" />
	<Node group="[]" id="628" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:180)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="629" dst_node_input="a" src_node_id="628" src_node_output="result" />
	<Node group="[]" id="629" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:960)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:180)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="656" dst_node_input="input" src_node_id="629" src_node_output="result" />
	<Node group="[]" id="656" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="657" dst_node_input="in0" src_node_id="656" src_node_output="output" />
	<Node group="[]" id="654" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="655" dst_node_input="in0" src_node_id="654" src_node_output="output" />
	<Node group="[]" id="653" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(32, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="655" dst_node_input="in1" src_node_id="653" src_node_output="output" />
	<Node group="[]" id="655" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(32)" />
		<Output latency="0" name="result" type="dfeBits(64)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="657" dst_node_input="in1" src_node_id="655" src_node_output="result" />
	<Node group="[]" id="657" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(64)" />
		<Output latency="0" name="result" type="dfeBits(96)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="659" dst_node_input="in1" src_node_id="657" src_node_output="result" />
	<Node group="[]" id="659" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(96)" />
		<Output latency="0" name="result" type="dfeBits(128)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="661" dst_node_input="in1" src_node_id="659" src_node_output="result" />
	<Node group="[]" id="661" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(160)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="663" dst_node_input="in1" src_node_id="661" src_node_output="result" />
	<Node group="[]" id="663" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(160)" />
		<Output latency="0" name="result" type="dfeBits(192)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="665" dst_node_input="in1" src_node_id="663" src_node_output="result" />
	<Node group="[]" id="665" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(192)" />
		<Output latency="0" name="result" type="dfeBits(224)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="667" dst_node_input="in1" src_node_id="665" src_node_output="result" />
	<Node group="[]" id="667" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(224)" />
		<Output latency="0" name="result" type="dfeBits(256)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="652" dst_node_input="data" src_node_id="667" src_node_output="result" />
	<Node group="[]" id="652" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOutput">
		<Input name="output_control" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeBits(256)" />
		<Text>Output(estimation)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:685)
spdm.kernels.SignalEstimatorKernel.&lt;init&gt;(SignalEstimatorKernel.maxj:211)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:28)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>estimation</Name>
	</Node>
	<Node group="[]" id="672" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="673" dst_node_input="load" src_node_id="672" src_node_output="value" />
	<Node group="[]" id="668" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="670" dst_node_input="enable" src_node_id="668" src_node_output="value" />
	<Node group="[]" id="669" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge dst_node_id="670" dst_node_input="max" src_node_id="669" src_node_output="value" />
	<Node group="[]" id="670" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="671" dst_node_input="input" src_node_id="670" src_node_output="count" />
	<Node group="[]" id="671" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="673" dst_node_input="data" src_node_id="671" src_node_output="output" />
	<Node group="[]" id="673" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeOutputMappedReg">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar output (current_run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>current_run_cycle_count</Name>
	</Node>
	<Node group="[]" id="674" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="676" dst_node_input="enable" src_node_id="674" src_node_output="value" />
	<Node group="[]" id="675" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge dst_node_id="676" dst_node_input="max" src_node_id="675" src_node_output="value" />
	<Node group="[]" id="676" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="679" dst_node_input="a" src_node_id="676" src_node_output="count" />
	<Node group="[]" id="678" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="run_cycle_count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar input (run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
		<Name>run_cycle_count</Name>
	</Node>
	<Edge dst_node_id="679" dst_node_input="b" src_node_id="678" src_node_output="run_cycle_count" />
	<Node group="[]" id="679" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="677" dst_node_input="start" src_node_id="679" src_node_output="result" />
	<Node group="[]" id="677" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeFlush">
		<Input name="start" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>flush on trigger</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
spdm.SpdmManager.&lt;init&gt;(SpdmManager.maxj:31)
spdm.SpdmManager.main(SpdmManager.maxj:100)</OriginStackTrace>
	</Node>
</Graph>
